import { useState } from 'react';

interface PaymentFormProps {
  userData: {
    userType: 'individual' | 'company';
    contractNumber: string;
  };
}

const PaymentForm = ({ userData }: PaymentFormProps) => {
  const [amount, setAmount] = useState('');
  const [paymentMethod, setPaymentMethod] = useState('card');
  const [showConfirmation, setShowConfirmation] = useState(false);
  const [showInvoiceModal, setShowInvoiceModal] = useState(false);
  const [showSberbankInstructions, setShowSberbankInstructions] = useState(false);
  const [showSberbankTerminalInstructions, setShowSberbankTerminalInstructions] = useState(false);

  const paymentMethods = [
    ...(userData.userType === 'company' ? [{ 
      id: 'invoice', 
      label: '–í—ã—Å—Ç–∞–≤–∏—Ç—å —Å—á–µ—Ç', 
      icon: 'üìÑ',
      description: '–î–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü'
    }] : []),
    { 
      id: 'card', 
      label: 'VISA / MasterCard', 
      icon: 'üí≥',
      description: '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã'
    },
    { 
      id: 'sberbank', 
      label: '–°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω', 
      icon: 'üè¶',
      description: '–ß–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –°–±–µ—Ä–±–∞–Ω–∫'
    },
    { 
      id: 'sberbank-terminal', 
      label: '–°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω (—Ç–µ—Ä–º–∏–Ω–∞–ª)', 
      icon: 'üèß',
      description: '–ß–µ—Ä–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª –°–±–µ—Ä–±–∞–Ω–∫'
    }
  ];

  const handlePaymentMethodClick = (methodId: string) => {
    if (methodId === 'invoice') {
      setShowInvoiceModal(true);
    } else if (methodId === 'sberbank') {
      setShowSberbankInstructions(true);
    } else if (methodId === 'sberbank-terminal') {
      setShowSberbankTerminalInstructions(true);
    } else if (methodId === 'card') {
      setPaymentMethod(methodId);
    }
  };

  const handleCardPayment = () => {
    if (!amount || parseFloat(amount) <= 0) return;
    setShowConfirmation(true);
  };

  const confirmCardPayment = () => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø–ª–∞—Ç–µ–∂–Ω—ã–π —à–ª—é–∑
    alert(`–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø–ª–∞—Ç–µ–∂–Ω—ã–π —à–ª—é–∑ –¥–ª—è –æ–ø–ª–∞—Ç—ã ${parseFloat(amount).toLocaleString('ru-RU', { minimumFractionDigits: 2 })} ‚ÇΩ`);
    setShowConfirmation(false);
    setAmount('');
  };

  const generateInvoice = () => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è PDF —Å—á–µ—Ç–∞
    alert(`–°—á–µ—Ç –Ω–∞ —Å—É–º–º—É ${parseFloat(amount).toLocaleString('ru-RU', { minimumFractionDigits: 2 })} ‚ÇΩ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω`);
    setShowInvoiceModal(false);
    setAmount('');
  };

  if (showSberbankTerminalInstructions) {
    return (
      <div className="space-y-6">
        <div className="flex items-center justify-between">
          <h1 className="text-2xl font-bold text-gray-900">–°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω (—Ç–µ—Ä–º–∏–Ω–∞–ª)</h1>
          <button
            onClick={() => setShowSberbankTerminalInstructions(false)}
            className="text-gray-500 hover:text-gray-700"
          >
            ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–æ—Å–æ–±–∞–º –æ–ø–ª–∞—Ç—ã
          </button>
        </div>
        
        <div className="bg-orange-50 border border-orange-200 rounded-lg p-4 mb-6">
          <p className="text-orange-800 font-medium">
            ‚ö†Ô∏è –û–±—Ä–∞—â–∞–µ–º –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ –¥–≤—É—Ö –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –¥–Ω–µ–π.
          </p>
        </div>

        <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6 space-y-8">
          <div>
            <h3 className="text-lg font-semibold text-gray-900 mb-4">–û–ø–ª–∞—Ç–∞ —É—Å–ª—É–≥ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ —á–µ—Ä–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª ¬´–°–±–µ—Ä–±–∞–Ω–∫¬ª</h3>
            
            <div className="space-y-6">
              <div>
                <p className="text-gray-700 mb-3">
                  1. –ü—Ä–∏ –æ–ø–ª–∞—Ç–µ —É—Å–ª—É–≥ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ —á–µ—Ä–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª —Å–±–µ—Ä–±–∞–Ω–∫–∞, –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—ã–±–∏—Ä–∞–µ–º —Ä–∞–∑–¥–µ–ª ¬´–ü–ª–∞—Ç–µ–∂–∏ –∏ –ø–µ—Ä–µ–≤–æ–¥—ã¬ª:
                </p>
                <div className="bg-gray-100 rounded-lg p-4">
                  <img 
                    src="/lovable-uploads/36844a76-1dd5-4a3a-b777-a4c1c43d40f4.png" 
                    alt="–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ –°–±–µ—Ä–±–∞–Ω–∫ - –ü–ª–∞—Ç–µ–∂–∏ –∏ –ø–µ—Ä–µ–≤–æ–¥—ã" 
                    className="w-full max-w-md mx-auto rounded-lg"
                  />
                </div>
              </div>

              <div>
                <p className="text-gray-700 mb-3">
                  2. –í—ã—Ö–æ–¥–∏—Ç —Å–ª–µ–¥—É—é—â–µ–µ –æ–∫–æ—à–∫–æ (–∫–∞–∫ –Ω–∞ —Ä–∏—Å—É–Ω–∫–µ —Å–Ω–∏–∑—É). –ó–¥–µ—Å—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å ¬´–ü–æ–∏—Å–∫ —É—Å–ª—É–≥ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π¬ª:
                </p>
                <div className="bg-gray-100 rounded-lg p-4">
                  <img 
                    src="/lovable-uploads/2e17a457-b2ba-41bc-87aa-3657aeef5ccc.png" 
                    alt="–ü–æ–∏—Å–∫ —É—Å–ª—É–≥ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –°–±–µ—Ä–±–∞–Ω–∫" 
                    className="w-full max-w-md mx-auto rounded-lg"
                  />
                </div>
              </div>

              <div>
                <p className="text-gray-700 mb-3">
                  3. –ó–∞—Ç–µ–º, –≤ –ø–æ–ª–µ ¬´–ü–æ–∏—Å–∫¬ª –≤–≤–æ–¥–∏–º –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ ¬´–°–∫–∞–π–Ω–µ—Ç¬ª (—Ä—É—Å—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏):
                </p>
                <div className="bg-gray-100 rounded-lg p-4">
                  <img 
                    src="/lovable-uploads/b43584e1-4fd4-4b26-9940-a6c9b36b1499.png" 
                    alt="–í–≤–æ–¥ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –°–∫–∞–π–Ω–µ—Ç –≤ –ø–æ–∏—Å–∫–µ" 
                    className="w-full max-w-md mx-auto rounded-lg"
                  />
                </div>
              </div>

              <div>
                <p className="text-gray-700 mb-3">
                  4. –î–∞–ª–µ–µ –≤—ã—Ö–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π, –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∞ —Ä–∏—Å—É–Ω–∫–µ –Ω–∏–∂–µ. –í—ã–±–∏—Ä–∞–µ–º ¬´–°–∫–∞–π–Ω–µ—Ç (–≥. –ö–∞–∑–∞–Ω—å)¬ª:
                </p>
                <div className="bg-gray-100 rounded-lg p-4">
                  <img 
                    src="/lovable-uploads/f2b004ce-1414-4755-939b-dda27e1d3475.png" 
                    alt="–í—ã–±–æ—Ä –°–∫–∞–π–Ω–µ—Ç (–≥. –ö–∞–∑–∞–Ω—å) –∏–∑ —Å–ø–∏—Å–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π" 
                    className="w-full max-w-md mx-auto rounded-lg"
                  />
                </div>
              </div>

              <div>
                <p className="text-gray-700 mb-3">
                  5. –ó–∞—Ç–µ–º –≤ –ø–æ–ª–µ ¬´–ù–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞¬ª –≤–≤–æ–¥–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ ({userData.contractNumber}) –∏ –Ω–∞–∂–∏–º–∞–µ—Ç–µ ¬´–î–∞–ª–µ–µ¬ª:
                </p>
                <div className="bg-gray-100 rounded-lg p-4">
                  <img 
                    src="/lovable-uploads/e2f2ce81-b335-4ae2-9029-0d512a6df3cc.png" 
                    alt="–í–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ –¥–æ–≥–æ–≤–æ—Ä–∞ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ" 
                    className="w-full max-w-md mx-auto rounded-lg"
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  if (showSberbankInstructions) {
    return (
      <div className="space-y-6">
        <div className="flex items-center justify-between">
          <h1 className="text-2xl font-bold text-gray-900">–°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω</h1>
          <button
            onClick={() => setShowSberbankInstructions(false)}
            className="text-gray-500 hover:text-gray-700"
          >
            ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–æ—Å–æ–±–∞–º –æ–ø–ª–∞—Ç—ã
          </button>
        </div>
        
        <div className="bg-orange-50 border border-orange-200 rounded-lg p-4 mb-6">
          <p className="text-orange-800 font-medium">
            ‚ö†Ô∏è –û–±—Ä–∞—â–∞–µ–º –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ –¥–≤—É—Ö –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –¥–Ω–µ–π.
          </p>
        </div>

        <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6 space-y-8">
          <div>
            <h3 className="text-lg font-semibold text-gray-900 mb-4">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ–ø–ª–∞—Ç–µ</h3>
            
            <div className="space-y-6">
              <div>
                <p className="text-gray-700 mb-3">
                  1. –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ ¬´–°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω¬ª –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–¥–µ–ª ¬´–ü–ª–∞—Ç–µ–∂–∏¬ª. –í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª ¬´–û—Å—Ç–∞–ª—å–Ω–æ–µ¬ª, –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ –Ω–∏–∂–µ:
                </p>
                <div className="bg-gray-100 rounded-lg p-4">
                  <img 
                    src="/lovable-uploads/e5c6f924-2fc6-45c1-b017-027b19d385af.png" 
                    alt="–°–∫—Ä–∏–Ω—à–æ—Ç —Ä–∞–∑–¥–µ–ª–∞ –û—Å—Ç–∞–ª—å–Ω–æ–µ –≤ –°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω" 
                    className="w-full max-w-md mx-auto rounded-lg"
                  />
                </div>
              </div>

              <div>
                <p className="text-gray-700 mb-3">
                  2. –í –ø–æ–∏—Å–∫–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ ¬´—Å–∫–∞–π–Ω–µ—Ç¬ª (—Ä—É—Å—Å–∫–∏–º–∏, —Å—Ç—Ä–æ—á–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏) –∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ¬´–ü–æ–∏—Å–∫¬ª:
                </p>
                <div className="bg-gray-100 rounded-lg p-4">
                  <img 
                    src="/lovable-uploads/2a95448f-2bf7-4f29-a7e7-553fc3bf1cfc.png" 
                    alt="–°–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–∏—Å–∫–∞ —Å–∫–∞–π–Ω–µ—Ç –≤ –°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω" 
                    className="w-full max-w-md mx-auto rounded-lg"
                  />
                </div>
              </div>

              <div>
                <p className="text-gray-700 mb-3">
                  3. –î–∞–ª–µ–µ –≤ —Å–ø–∏—Å–∫–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å ¬´–°–∫–∞–π–Ω–µ—Ç (–≥. –ö–∞–∑–∞–Ω—å)¬ª, –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∞ —Ä–∏—Å—É–Ω–∫–µ –Ω–∏–∂–µ:
                </p>
                <div className="bg-gray-100 rounded-lg p-4">
                  <img 
                    src="/lovable-uploads/1addae5d-5c1e-4083-939c-8c88130bebe6.png" 
                    alt="–°–∫—Ä–∏–Ω—à–æ—Ç –≤—ã–±–æ—Ä–∞ –°–∫–∞–π–Ω–µ—Ç (–≥. –ö–∞–∑–∞–Ω—å)" 
                    className="w-full max-w-md mx-auto rounded-lg"
                  />
                </div>
              </div>

              <div>
                <p className="text-gray-700 mb-3">
                  4. –í –ø–æ–ª–µ ¬´–ù–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞¬ª –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –í–∞—à –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ ({userData.contractNumber}) –∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å¬ª.
                </p>
                <div className="bg-gray-100 rounded-lg p-4">
                  <img 
                    src="/lovable-uploads/0d434773-eaf9-4767-806a-80d398eb158c.png" 
                    alt="–°–∫—Ä–∏–Ω—à–æ—Ç –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ –¥–æ–≥–æ–≤–æ—Ä–∞" 
                    className="w-full max-w-md mx-auto rounded-lg"
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  if (showConfirmation) {
    return (
      <div className="space-y-6">
        <div className="flex items-center justify-between">
          <h1 className="text-2xl font-bold text-gray-900">–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ VISA / MasterCard</h1>
          <button
            onClick={() => setShowConfirmation(false)}
            className="text-gray-500 hover:text-gray-700"
          >
            ‚Üê –ù–∞–∑–∞–¥
          </button>
        </div>
        
        <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
          <div className="text-center space-y-6">
            <p className="text-gray-600">
              –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—É–º–º—É –∏ –Ω–∞–∂–º–∏—Ç–µ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å. –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è, –≤—ã –ø–µ—Ä–µ–π–¥–µ—Ç–µ –Ω–∞ —Å–µ—Ä–≤–∏—Å, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω –ø–µ—Ä–µ–≤–æ–¥.
            </p>
            
            <div className="bg-gray-50 rounded-lg p-4">
              <p className="text-lg font-semibold text-gray-900">
                –°—É–º–º–∞: {parseFloat(amount).toLocaleString('ru-RU', { minimumFractionDigits: 2 })} ‚ÇΩ
              </p>
            </div>
            
            <button
              onClick={confirmCardPayment}
              className="bg-skynet-orange hover:bg-skynet-orange-bright text-white font-medium px-8 py-3 rounded-lg shadow-md transition-all"
            >
              –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <h1 className="text-2xl font-bold text-gray-900">–û–ø–ª–∞—Ç–∞</h1>
      
      <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
        <form className="space-y-6">
          {paymentMethod === 'card' && (
            <div>
              <label htmlFor="amount" className="block text-sm font-medium text-gray-700 mb-2">
                –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
              </label>
              <div className="relative">
                <input
                  type="number"
                  id="amount"
                  value={amount}
                  onChange={(e) => setAmount(e.target.value)}
                  className="block w-full pr-12 border-gray-300 rounded-md focus:ring-skynet-blue focus:border-skynet-blue"
                  placeholder="0.00"
                  min="1"
                  step="0.01"
                />
                <div className="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                  <span className="text-gray-500">‚ÇΩ</span>
                </div>
              </div>
              <p className="mt-2 text-sm text-gray-600">
                –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∏ –Ω–∞–∂–º–∏—Ç–µ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å. –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è, –≤—ã –ø–µ—Ä–µ–π–¥–µ—Ç–µ –Ω–∞ —Å–µ—Ä–≤–∏—Å, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω –ø–µ—Ä–µ–≤–æ–¥.
              </p>
            </div>
          )}
          
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-4">
              –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
            </label>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {paymentMethods.map((method) => (
                <div 
                  key={method.id} 
                  className="border border-gray-300 rounded-lg p-4 cursor-pointer hover:border-skynet-blue transition-colors"
                  onClick={() => handlePaymentMethodClick(method.id)}
                >
                  <div className="flex items-center">
                    <div className="flex items-center text-sm font-medium text-gray-700">
                      <span className="text-2xl mr-3">{method.icon}</span>
                      <div>
                        <div>{method.label}</div>
                        <div className="text-xs text-gray-500">{method.description}</div>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
          
          {paymentMethod === 'card' && (
            <div className="flex justify-end">
              <button
                type="button"
                onClick={handleCardPayment}
                disabled={!amount || parseFloat(amount) <= 0}
                className="bg-skynet-orange hover:bg-skynet-orange-bright disabled:bg-gray-300 disabled:cursor-not-allowed text-white font-medium px-8 py-3 rounded-lg shadow-md transition-all"
              >
                –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
              </button>
            </div>
          )}
        </form>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞ */}
      {showInvoiceModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-xl p-6 max-w-md w-full mx-4">
            <h3 className="text-xl font-semibold text-gray-900 mb-4">–í—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É</h3>
            
            <div className="space-y-4">
              <div>
                <label htmlFor="invoice-amount" className="block text-sm font-medium text-gray-700 mb-1">
                  –°—É–º–º–∞:
                </label>
                <div className="relative">
                  <input
                    type="number"
                    id="invoice-amount"
                    value={amount}
                    onChange={(e) => setAmount(e.target.value)}
                    className="block w-full pr-12 border-gray-300 rounded-md focus:ring-skynet-blue focus:border-skynet-blue"
                    placeholder="0.00"
                    min="1"
                    step="0.01"
                  />
                  <div className="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                    <span className="text-gray-500">‚ÇΩ</span>
                  </div>
                </div>
              </div>
              
              <div className="flex space-x-3">
                <button
                  onClick={() => {
                    setShowInvoiceModal(false);
                    setAmount('');
                  }}
                  className="flex-1 bg-gray-200 hover:bg-gray-300 text-gray-700 font-medium py-2 px-4 rounded-lg transition-colors"
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
                <button
                  onClick={generateInvoice}
                  disabled={!amount || parseFloat(amount) <= 0}
                  className="flex-1 bg-skynet-orange hover:bg-skynet-orange-bright disabled:bg-gray-300 disabled:cursor-not-allowed text-white font-medium py-2 px-4 rounded-lg transition-colors"
                >
                  –í—ã—Å—Ç–∞–≤–∏—Ç—å —Å—á–µ—Ç
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default PaymentForm;
